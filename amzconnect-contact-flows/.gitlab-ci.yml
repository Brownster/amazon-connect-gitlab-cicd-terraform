# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

image: amazonlinux:latest

variables:
  AWS_CREDS_TARGET_ROLE: "${AWS_CREDS_TARGET_ROLE}"
  AWS_DEFAULT_REGION: us-east-1 # Only used for initial role assumption, has no effect on resource deployment
  TF_STATE_NAME: "${DEPLOYMENT_ENV_NAME}_${TF_VAR_region}_flows"
  TF_ROOT: amzconnect-contact-flows/terraform
  COMMIT_ID: $CI_COMMIT_SHORT_SHA

include: "common.yml"

stages:
  - validate
  - test
  - build_flows
  - plan
  - deploy
  - cleanup

fmt:
  allow_failure: true
  stage: validate

  extends:
    - .aws_assume_role
    - .rules
  script:
    - !reference [.setup, script]
    - gitlab-terraform fmt

validate:
  allow_failure: false
  stage: validate

  extends:
    - .aws_assume_role
    - .rules
  script:
    - !reference [.setup, script]
    - gitlab-terraform validate

tflint:
  parallel:
    matrix:
      - TF_VAR_region: ["us-east-1"]

checkov:
  stage: test
  allow_failure: true # True for AutoDevOps compatibility
  # extends: .aws_assume_role
  image:
    name: bridgecrew/checkov:latest
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  rules:
    - if: $SAST_DISABLED
      when: never
    - if: $CI_COMMIT_BRANCH
      exists:
        - "**/*.yml"
        - "**/*.yaml"
        - "**/*.json"
        - "**/*.template"
        - "**/*.tf"
        - "**/serverless.yml"
        - "**/serverless.yaml"
  script:
    - checkov -d ./amzconnect-contact-flows/terraform  -o junitxml | tee amzconnect-contact-flows.test.xml
  artifacts:
    reports:
      junit: "amzconnect-contact-flows.test.xml"
    paths:
      - "amzconnect-contact-flows.test.xml"

build_flows:
  stage: build_flows
  extends:
    - .aws_assume_role
    - .rules
  when: manual
  parallel:
    matrix:
      - TF_VAR_region: ["us-east-1"] #, "us-west-2"]
  variables:
    ENVIRONMENT: "${DEPLOYMENT_ENV_NAME}"
    AWS_REGION: "${TF_VAR_region}" #This sets the region for the javascript SDK (primarily for getParameter)
  script:
    - export ACCOUNT=$(aws sts get-caller-identity --query Account --output text)
    - printenv && unset AWS_PROFILE
    - yum install -y npm nodejs20
    - cd amzconnect-contact-flows
    - rm -rf imports/contact_flow_content && mkdir -p imports/contact_flow_content
    - cd scripts/replacer
    - ln -s -f /usr/bin/node-20 /usr/bin/node
    - npm ci
    - node -v
    - npm run build
    - node dist/index.js
  artifacts:
    paths:
      - ${TF_ROOT}/../imports/contact_flow_content

plan:
  stage: plan
  extends:
    - .aws_assume_role
    - .rules
  dependencies:
    - build_flows
  needs: [build_flows]
  parallel:
    matrix:
      - TF_VAR_region: ["us-east-1"] #, "us-west-2"]
  variables:
    TF_VAR_commit_ref: "$CI_COMMIT_SHORT_SHA"
    TF_VAR_env: $DEPLOYMENT_ENV_NAME
  script:
    - !reference [.setup, script]
    - gitlab-terraform --version
    - gitlab-terraform plan -var-file=env/${DEPLOYMENT_ENV_NAME}.tfvars
    - gitlab-terraform plan-json -var-file=env/${DEPLOYMENT_ENV_NAME}.tfvars
    - cp ${TF_ROOT}/plan.cache ${TF_ROOT}/${TF_VAR_region}.plan.cache
  artifacts:
    when: always
    paths:
      - ${TF_ROOT}/${TF_VAR_region}.plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json

deploy:
  extends:
    - .aws_assume_role
    - .rules
  dependencies:
    - plan
    - build_flows
  stage: deploy
  when: manual
  allow_failure: false
  resource_group: ${TF_STATE_NAME}
  parallel:
    matrix:
      - TF_VAR_region: ["us-east-1"] #, "us-west-2"]
  variables:
    TF_VAR_commit_ref: "$CI_COMMIT_SHORT_SHA"
    TF_VAR_env: $DEPLOYMENT_ENV_NAME
    TF_PLAN_CACHE: ${TF_VAR_region}.plan.cache
  script:
    - !reference [.setup, script]
    - ls -laR ${TF_ROOT}/../imports/contact_flow_content
    - pwd
    - gitlab-terraform apply

destroy:
  extends:
    - .aws_assume_role
    - .rules
  stage: cleanup
  dependencies:
    - deploy
  resource_group: ${TF_STATE_NAME}
  parallel:
    matrix:
      - TF_VAR_region: ["us-east-1"] #, "us-west-2"]
  variables:
    TF_VAR_commit_ref: "$CI_COMMIT_SHORT_SHA"
    TF_VAR_env: $DEPLOYMENT_ENV_NAME
    TF_PLAN_CACHE: ${TF_VAR_region}.plan.cache
  script:
    - !reference [.setup, script]
    - gitlab-terraform destroy -var-file=env/${DEPLOYMENT_ENV_NAME}.tfvars
  when: manual
